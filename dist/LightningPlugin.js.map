{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 5d22cab1c9bb9866fee9","webpack:///./main.js","webpack:///./LightningGenerator.js","webpack:///./Segment.js","webpack:///./getRandomArbitrary.js","webpack:///./averagePoint.js"],"names":["LightningPlugin","scene","pluginManager","generations","maximumOffset","lengthScale","systems","events","on","postRender","eventEmitter","preUpdate","update","postUpdate","pause","resume","sleep","wake","shutdown","destroy","time","delta","game","Phaser","Plugins","ScenePlugin","LightningGenerator","startPoint","endPoint","segmentList","push","offsetAmount","i","newList","segmentOld","segment","clone","midPoint","angle","Math","atan2","y","x","randOffset","x1","sin","y1","cos","x2","y2","level","distance","sqrt","pow","splitEnd","branchAngle","RotateAroundDistance","Segment","getRandomArbitrary","min","max","random","averagePoint","point1","point2","Average"],"mappings":"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","file":"LightningPlugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LightningPlugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LightningPlugin\"] = factory();\n\telse\n\t\troot[\"LightningPlugin\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5d22cab1c9bb9866fee9","/**\n * @author       Patrick Sletvold\n * @author       Richard Davey\n * @license      {@link https://github.com/photonstorm/phaser3-plugin-template/blob/master/LICENSE|MIT License}\n */\nimport LightningGenerator from './LightningGenerator';\n\n/**\n * The Lightning Plugin can make lightning\n */\nclass LightningPlugin extends Phaser.Plugins.ScenePlugin {\n  /**\n   * @param {Phaser.Scene} scene - A reference to the Phaser.Scene instance.\n   * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to the\n   *  Phaser.Plugins.PluginManager instance.\n   */\n  constructor(scene, pluginManager) {\n    super(scene, pluginManager);\n\n    // Register our new Game Object type\n    // pluginManager.registerGameObject('lightning', this.add);\n  }\n\n  /**\n   * \n   * @param {number} generations - Number of times to run the division code\n   * @param {String} maximumOffset - Maximum amount of pixels to offset the segments\n   * @param {String} lengthScale - The factor to scale the lenght of the branches\n   * @returns {LightningGenerator}\n   */\n  add(generations = 10, maximumOffset = 50, lengthScale = 0.8) {\n    return new LightningGenerator(generations, maximumOffset, lengthScale);\n  }\n\n  /**\n   * Called by the PluginManager when this plugin is started.\n   * If a plugin is stopped, and then started again, this will get called again.\n   * Typically called immediately after `BasePlugin.init`.\n   *\n   * @private\n   * @returns {void}\n   */\n  start() {\n    this.systems.events.on('postrender', this.postRender, this);\n  }\n\n  /**\n   * If this is a Scene Plugin (i.e. installed into a Scene) then this method is called when the Scene boots.\n   * By this point the plugin properties `scene` and `systems` will have already been set.\n   * In here you can listen for Scene events and set-up whatever you need for this plugin to run.\n   * @private\n   * @returns {void}\n   */\n  boot() {\n    const eventEmitter = this.systems.events;\n\n    //  Listening to the following events is entirely optional,\n    //  although we would recommend cleanly shutting down and destroying at least.\n    //  If you don't need any of these events then remove the listeners and the relevant methods too.\n\n    eventEmitter.on('preupdate', this.preUpdate, this);\n    eventEmitter.on('update', this.update, this);\n    eventEmitter.on('postupdate', this.postUpdate, this);\n\n    eventEmitter.on('pause', this.pause, this);\n    eventEmitter.on('resume', this.resume, this);\n\n    eventEmitter.on('sleep', this.sleep, this);\n    eventEmitter.on('wake', this.wake, this);\n\n    eventEmitter.on('shutdown', this.shutdown, this);\n    eventEmitter.on('destroy', this.destroy, this);\n  }\n\n  /**\n   * Called every Scene step - phase 1\n   * \n   * @private\n   * @param {number} time - Current game time\n   * @param {number} delta - Time since last call\n   * @returns {void}\n   */\n  preUpdate(time, delta) {\n    // Empty\n  }\n\n  /**\n   * Internal update method, called by the PluginManager.\n   * Called every Scene step - phase 2\n   *\n   * @private\n   * @param {number} time - Current game time\n   * @param {number} delta - Time since last call\n   * @returns {void}\n   */\n  update(time, delta) {\n    // Empty\n  }\n\n  /**\n   * Called every Scene step - phase 3\n   * \n   * @private\n   * @param {number} time - Current game time\n   * @param {number} delta - Time since last call\n   * @returns {void}\n   */\n  postUpdate(time, delta) {\n    // Empty\n  }\n\n  /**\n   * Internal update method, called by the PluginManager.\n   *\n   * @private\n   * @returns {void}\n   */\n  postRender() {\n    // Empty\n  }\n\n  /**\n   * Called when a Scene is paused. A paused scene doesn't have its Step run, but still renders.\n   *\n   * @private\n   * @returns {void}\n   */\n  pause() {\n    // Empty\n  }\n\n  /**\n   * Called when a Scene is resumed from a paused state.\n   *\n   * @private\n   * @returns {void}\n   */\n  resume() {\n    // Empty\n  }\n\n  /**\n   * Called when a Scene is put to sleep.\n   * A sleeping scene doesn't update or render, but isn't destroyed or shutdown. preUpdate events still fire.\n   *\n   * @private\n   * @returns {void}\n   */\n  sleep() {\n    // Empty\n  }\n\n  /**\n   * Called when a Scene is woken from a sleeping state.\n   *\n   * @private\n   * @returns {void}\n   */\n  wake() {\n    // Empty\n  }\n\n  /**\n   * Called when a Scene shuts down,\n   * it may then come back again later (which will invoke the 'start' event) but should be considered dormant.\n   *\n   * @private\n   * @returns {void}\n   */\n  shutdown() {\n    // Empty\n  }\n\n  /**\n   * Destroys this Plugin.\n   * You must release everything in here, all references, all objects, free it all up.\n   * @private\n   * @returns {void}\n   */\n  destroy() {\n    this.pluginManager = null;\n    this.game = null;\n    this.scene = null;\n    this.systems = null;\n  }\n}\n\n/**\n * Shortcut to the LightningGenerator class\n * @type {LightningGenerator}\n */\nLightningPlugin.LightningGenerator = LightningGenerator;\n\nexport default LightningPlugin;\n\n\n// WEBPACK FOOTER //\n// ./main.js","/**\n * @author       Patrick Sletvold\n * @license      {@link https://github.com/photonstorm/phaser3-plugin-template/blob/master/LICENSE|MIT License}\n */\n\nimport Segment from './Segment';\nimport getRandomArbitrary from './getRandomArbitrary';\nimport averagePoint from './averagePoint';\n\nclass LightningGenerator {\n  constructor(generations, maximumOffset, lengthScale) {\n    this.generations = generations;\n    this.maximumOffset = maximumOffset;\n    this.lengthScale = lengthScale;\n  }\n\n  generate(startPoint, endPoint) {\n    let segmentList = [];\n\n    segmentList.push(new Segment(startPoint, endPoint, 1));\n\n    let offsetAmount = this.maximumOffset; // the maximum amount to offset a lightning vertex.\n\n    for (let i = 0; i < this.generations; i++) {\n      let newList = [];\n      for (const segmentOld of segmentList) {\n        let segment = segmentOld.clone();\n\n        let midPoint = averagePoint(segment.startPoint, segment.endPoint);\n\n        // Offset the midpoint by a random amount along the normal.\n        const angle = Math.atan2(\n          segment.endPoint.y - segment.startPoint.y,\n          segment.endPoint.x - segment.startPoint.x\n        );\n\n        const randOffset = getRandomArbitrary(-offsetAmount, offsetAmount);\n        const x1 = Math.sin(angle) * randOffset + midPoint.x;\n        const y1 = -Math.cos(angle) * randOffset + midPoint.y;\n        const x2 = -Math.sin(angle) * randOffset + midPoint.x;\n        const y2 = Math.cos(angle) * randOffset + midPoint.y;\n\n        if (getRandomArbitrary(-1, 1) < 0) {\n          midPoint.x = x1;\n          midPoint.y = y1;\n        } else {\n          midPoint.x = x2;\n          midPoint.y = y2;\n        }\n\n        // Create two new segments that span from the start point to the end point,\n        // but with the new (randomly-offset) midpoint.\n        newList.push(new Segment(segment.startPoint, midPoint, segment.level));\n        newList.push(new Segment(midPoint, segment.endPoint, segment.level));\n\n\n        if ( /*getRandomArbitrary(0, 2) < 1 && i % 2 == 0*/ i === 0 || i === 2) {\n          const distance = Math.sqrt(\n            Math.pow(midPoint.x - segment.startPoint.x, 2) +\n                        Math.pow(midPoint.y - segment.startPoint.y, 2));\n\n          const splitEnd = {\n            x: segment.endPoint.x,\n            y: segment.endPoint.y\n          };\n          let branchAngle;\n          if (getRandomArbitrary(0, 2) < 1) {\n            branchAngle = getRandomArbitrary(-0.8, -0.2);\n          } else {\n            branchAngle = getRandomArbitrary(0.2, 0.8);\n          }\n          Phaser.Math.RotateAroundDistance(\n            splitEnd,\n            midPoint.x,\n            midPoint.y,\n            branchAngle,\n            this.lengthScale * distance\n          );\n          // lengthScale is, for best results, < 1.  0.7 is a good value.\n          newList.push(\n            new Segment(midPoint, splitEnd, segment.level + 1)\n          );\n        }\n\n      }\n      // Each subsequent generation offsets at max half as much as the generation before.\n      offsetAmount /= 2;\n      segmentList = newList;\n    }\n    return segmentList;\n  }\n}\n\nexport default LightningGenerator;\n\n\n// WEBPACK FOOTER //\n// ./LightningGenerator.js","/**\n * @author       Patrick Sletvold\n * @license      {@link https://github.com/photonstorm/phaser3-plugin-template/blob/master/LICENSE|MIT License}\n */\n\nclass Segment {\n  constructor(startPoint, endPoint, level) {\n    this.startPoint = {\n      x: startPoint.x,\n      y: startPoint.y\n    };\n    this.endPoint = {\n      x: endPoint.x,\n      y: endPoint.y\n    };\n    this.level = level;\n  }\n\n  clone() {\n    return new Segment(\n      { x: this.startPoint.x, y: this.startPoint.y },\n      { x: this.endPoint.x, y: this.endPoint.y },\n      this.level\n    );\n  }\n}\n\nexport default Segment;\n\n\n// WEBPACK FOOTER //\n// ./Segment.js","/**\n * Returns a random number between min (inclusive) and max (exclusive)\n * https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range/1527820#1527820\n */\nexport default function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\n\n// WEBPACK FOOTER //\n// ./getRandomArbitrary.js","export default function averagePoint(point1, point2) {\n  return {\n    x: Phaser.Math.Average([point1.x, point2.x]),\n    y: Phaser.Math.Average([point1.y, point2.y])\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ./averagePoint.js"],"sourceRoot":""}